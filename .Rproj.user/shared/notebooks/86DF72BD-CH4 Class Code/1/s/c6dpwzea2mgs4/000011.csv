"0","# take mpg data frame and assign new object. Filter the data only rows with class = suv and the year is 2008. Group that data by manufacture. summarize the data where and assign highway mean and display the mean"
"0","mpg_subset <-mpg %>%"
"0","  dplyr::filter(class == ""suv"", year == ""2008"") %>%"
"0","  dplyr::group_by(manufacturer) %>%"
"0","  dplyr::summarise(hwy_mean = mean(hwy), displ_mean = mean(displ))"
"0",""
"0","# call to ggplot, note that data and aesthetics are called in each geom layer"
"0","ggplot() +"
"0","  # first layer - note the main dataframe was called"
"0","  geom_point(data = filter(mpg, class == ""suv"" & year == 2008),"
"0","           aes(x = manufacturer, "
"0","               y = hwy, "
"0","               color = displ),"
"0","           size = 2) +"
"0","  # second layer - note the subset dataframe was called "
"0","  geom_errorbar(data = mpg_subset,"
"0","             aes(x = manufacturer,"
"0","                 ymin = hwy_mean,"
"0","                 ymax = hwy_mean,"
"0","                 color = displ_mean),"
"0","             size = 1) +"
"0","  # customize plot labels"
"0","  labs(title = ""Fuel Economy for 2008 SUVs by Manufacturer and Engine Displacement"","
"0","       color = ""Disp (L)"") +"
"0","  ylab(""highway fuel economy (miles/gal)"") +"
"0","  # add a fancy color scale"
"0","  scale_colour_stepsn(colours = hcl.colors(n=5, palette = ""plasma"")) +"
"0","  # adopt a theme without a gray background"
"0","  theme_classic() +"
"0","  # enclose the plot on all sides with a black line"
"0","  theme(panel.background = element_rect(color = ""black"","
"0","                                        size = 1))"
"2","Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
Please use `linewidth` instead."
"2","Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.
Please use the `linewidth` argument instead."
