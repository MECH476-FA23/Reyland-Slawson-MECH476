# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name2 <- function(pathname) {
df2 <- import.w.name(pathname)
df2 <- df2 %>%
dplyr::mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
dplyr::select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit()
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
# load packages for current session
library(tidyverse)
library(lubridate)
library(gridExtra) # needed for extra credit question
source("/Users/genevieve/Reyland-MECH476/functions/import.w.name")
# load packages for current session
library(tidyverse)
library(lubridate)
library(gridExtra) # needed for extra credit question
source("/Users/genevieve/Reyland-MECH476/functions/import.w.name.r")
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name2 <- function(pathname) {
df2 <- import.w.name(pathname)
df2 <- df2 %>%
dplyr::mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
dplyr::select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit()
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
# load packages for current session
library(tidyverse)
library(lubridate)
library(gridExtra) # needed for extra credit question
source("/Users/genevieve/Reyland-MECH476/functions/import.w.name.R")
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name2 <- function(pathname) {
df2 <- import.w.name(pathname)
df2 <- df2 %>%
dplyr::mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
dplyr::select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit()
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- import.w.name
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(import.w.name)
import.w.name2 <- function(pathname) {
df2 <- import.w.name(pathname)
df2 <- df2 %>%
dplyr::mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
dplyr::select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit()
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(import.w.name)
import.w.name2 <- function(pathname) {
df2 <- import.w.name(pathname)
df2 <- df2 %>%
dplyr::mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
dplyr::select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit()
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(import.w.name)
import.w.name2 <- function(pathname) {
df2 <- import.w.name(pathname, col_names = TRUE)
df2 <- df2 %>%
dplyr::mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
dplyr::select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit()
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
# load packages for current session
library(tidyverse)
library(lubridate)
library(gridExtra) # needed for extra credit question
source("import.w.name.R")
# load packages for current session
library(tidyverse)
library(lubridate)
library(gridExtra) # needed for extra credit question
source(import.w.name.R)
# load packages for current session
library(tidyverse)
library(lubridate)
library(gridExtra) # needed for extra credit question
source("import.w.name.R")
# load packages for current session
library(tidyverse)
library(lubridate)
library(gridExtra) # needed for extra credit question
source("/Users/genevieve/Reyland-MECH476/functions/import.w.name.R")
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name2 <- function(pathname) {
df2 <- read_csv(pathname, col_names = TRUE)
df2 <- df2 %>%
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)"),
date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
head(PA_data_1)
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name2 <- function(pathname) {
df2 <- read_csv(pathname, col_names = TRUE)
df2 <- df2 %>%
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)"),
date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
head(PA_data_2)
View(PA_data_2)
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name2 <- function(pathname) {
df2 <- read_csv(pathname, col_names = TRUE)
df2 <- df2 %>%
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)"),
date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
rename(temp_f = current_temp_f,
humidity = current_humidity) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
head(PA_data_2)
View(PA_data_2)
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name2 <- function(pathname) {
df2 <- read_csv(pathname, col_names = TRUE)
df2 <- df2 %>%
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)"),
date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
head(PA_data_2)
# the map code is provided in the coursebook
PA_data_merged <- map_dfr(file_list, import.w.name)
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(pathname) {
#create a tibble by importing the 'pathname' file
df <- read_csv(pathname, col_names = TRUE)
df <- df %>%
# use stringr::str_extract & a regex to get sensor ID from file name
# regex translation: "look for a /, then extract all letters and numbers that follow until _"
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)")) %>%
# return only a few salient variables to the resultant data frame using dplyr::select
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df)
}
import.w.name2 <- import.w.name
import.w.name2 <- function(pathname) {
df2 <- df %>%
mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(date_created) %>%
na.omit() %>%
return(df2)
}
```{r import.w.name2, include=FALSE}
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(pathname) {
#create a tibble by importing the 'pathname' file
df <- read_csv(pathname, col_names = TRUE)
df <- df %>%
# use stringr::str_extract & a regex to get sensor ID from file name
# regex translation: "look for a /, then extract all letters and numbers that follow until _"
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)")) %>%
# return only a few salient variables to the resultant data frame using dplyr::select
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df)
}
import.w.name2 <- import.w.name
import.w.name2 <- function(pathname) {
df2 <- df %>%
mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(date_created) %>%
na.omit() %>%
return(df2)
}
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(pathname) {
#create a tibble by importing the 'pathname' file
df <- read_csv(pathname, col_names = TRUE)
df <- df %>%
# use stringr::str_extract & a regex to get sensor ID from file name
# regex translation: "look for a /, then extract all letters and numbers that follow until _"
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)")) %>%
# return only a few salient variables to the resultant data frame using dplyr::select
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df)
}
import.w.name2 <- import.w.name
import.w.name2 <- function(pathname) {
df2 <- df %>%
mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(date_created) %>%
na.omit() %>%
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(pathname) {
#create a tibble by importing the 'pathname' file
df <- read_csv(pathname, col_names = TRUE)
df <- df %>%
# use stringr::str_extract & a regex to get sensor ID from file name
# regex translation: "look for a /, then extract all letters and numbers that follow until _"
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)")) %>%
# return only a few salient variables to the resultant data frame using dplyr::select
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df)
}
import.w.name2 <- import.w.name
import.w.name2 <- function(pathname) {
df2 <- df %>%
mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit() %>%
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
View(import.w.name)
View(import.w.name2)
View(import.w.name)
View(import.w.name2)
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(pathname) {
#create a tibble by importing the 'pathname' file
df <- read_csv(pathname, col_names = TRUE)
df <- df %>%
# use stringr::str_extract & a regex to get sensor ID from file name
# regex translation: "look for a /, then extract all letters and numbers that follow until _"
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)")) %>%
# return only a few salient variables to the resultant data frame using dplyr::select
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df)
}
import.w.name2 <- function(pathname) {
import.w.name2 <- import.w.name
df2 <- df %>%
mutate(date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit() %>%
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
View(import.w.name2)
# create an object that tracks the file names and file paths
# see the coursebook for details
# modify the import.w.name function
# hint: start with what is provided in the coursebook
file_list <- list.files('/Users/genevieve/Reyland-MECH476/data/purpleair/',
full.names = TRUE)
import.w.name <- function(pathname) {
#create a tibble by importing the 'pathname' file
df <- read_csv(pathname, col_names = TRUE)
df <- df %>%
# use stringr::str_extract & a regex to get sensor ID from file name
# regex translation: "look for a /, then extract all letters and numbers that follow until _"
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)")) %>%
# return only a few salient variables to the resultant data frame using dplyr::select
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df)
}
import.w.name2 <- function(pathname) {
df2 <- read_csv(pathname, col_names = TRUE)
df2 <- df2 %>%
mutate(sensor_ID = str_extract(pathname,
"(?<=//)[:alnum:]+(?=_)"),
date_created = str_extract(pathname,
"(?<=_)[:alnum:]+(?=\\.)")) %>%
select(UTCDateTime,
current_temp_f,
current_humidity,
pressure,
pm2_5_atm,
sensor_ID,
date_created) %>%
na.omit() # remove NA values, which happens when sensor goes offline
return(df2)
}
PA_data_2 <- import.w.name2(file_list[1])
head(PA_data_2)
# the map code is provided in the coursebook
PA_data_merged <- map_dfr(file_list, import.w.name)
PA_data_merged <- PA_data_merged %>%
dplyr::mutate(datetime = lubridate::ymd_hms(UTCDateTime)) %>%
dplyr::rename(temp = current_temp_f,
humidity = current_humidity)
find_NAs <- which(is.na(PA_data_merged$datetime))
NA_parse <- PA_data_merged %>%
slice(find_NAs) %>%
view()
# set global options for figures, code, warnings, and messages
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.path="../figs/",
echo=TRUE, warning=FALSE, message=FALSE)
View(PA_data_2)
