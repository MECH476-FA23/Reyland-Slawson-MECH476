dplyr::group_by(user) %>%
dplyr::tally() %>%
dplyr::ungroup()
# number of wildfire tweets by year
wildfire_timing <- wildfire %>%
dplyr::mutate(date = lubridate::mdy_hm(created_at),
year = lubridate::year(date)) %>%
dplyr::group_by(user, year) %>%
dplyr::tally() %>%
dplyr::ungroup()
View(senators_data)
View(senators_data)
# calculate quantiles of salary by gender
set.seed(1)
salary_quart <- salaries %>%
dplyr::select(salary) %>%
dplyr::group_by(gender) %>%
dplyr::tally() %>%
dplyr::ungroup()
salary_quart <- salaries %>%
dplyr::select(salary) %>%
dplyr::group_by(gender) %>%
dplyr::tally() %>%
dplyr::ungroup()
# create plot of tweets by month and user
month_tweets <- senators_data %>%
dplyr::select(text, created_at, user) %>%
dplyr::mutate(date = lubridate::mdy_hm(created_at),
month = lubridate::month(date)) %>%
dplyr::group_by(month, user) %>%
dplyr::tally() %>%
dplyr::ungroup()
library(ggplot2)
ggplot(data = month_tweets,
mapping = aes(x = month,
y = n,
fill = user)) +
geom_bar(stat = "identity",
position = "dodge") +
labs(x = "Month",
y = "Number of Tweets",
title = "Number of tweets by senator per month") +
scale_x_continuous(breaks = seq(from = 0,
to = 12,
by = 1))
theme_classic()
salary_quart <- salaries %>%
dplyr::select(gender) %>%
dplyr::group_by(salary) %>%
dplyr::tally() %>%
dplyr::ungroup()
salary_quart <- salaries %>%
dplyr::select(gender) %>%
dplyr::group_by(., salary) %>%
dplyr::tally() %>%
dplyr::ungroup()
salary_quart <- salaries %>%
dplyr::select(salary) %>%
dplyr::group_by(., gender) %>%
dplyr::tally() %>%
dplyr::ungroup()
salary_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(., gender) %>%
dplyr::tally() %>%
dplyr::ungroup()
salary_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::tally() %>%
dplyr::ungroup()
View(salary_quart)
salary_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::ungroup()
View(salary_quart)
cdf_salaries <- quantile(salary_quart,
probs = seq(0, 1, 0.25))
cdf_salaries <- quantile(salary_quart, probs = seq(0, 1, 0.25))
salary_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
quantiile(salary_quart, probs = seq(0, 1, 0.25)) %>%
dplyr::ungroup()
salary_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::filter(gender == "F") %>%
dplyr::ungroup()
View(salary_quart)
cdf_salaries <- quantile(m_quart, probs = seq(0, 1, 0.25))
m_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::filter(gender == "M") %>%
dplyr::ungroup()
cdf_salaries <- quantile(m_quart, probs = seq(0, 1, 0.25))
cdf_salaries <- quantile(m_quart$salary, probs = seq(0, 1, 0.25))
cdf_salaries
# calculate quantiles of salary by gender
set.seed(1)
f_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::filter(gender == "F") %>%
dplyr::ungroup()
m_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::filter(gender == "M") %>%
dplyr::ungroup()
m_cdf_salaries <- quantile(m_quart$salary, probs = seq(0, 1, 0.25))
f_cdf_salaries <- quantile(f_quart$salary, probs = seq(0, 1, 0.25))
cdf_salaries
m_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::filter(gender == "M") %>%
dplyr::ungroup()
m_cdf_salaries <- quantile(m_quart$salary, probs = seq(0, 1, 0.25))
f_cdf_salaries <- quantile(f_quart$salary, probs = seq(0, 1, 0.25))
m_cdf_salaries
f_cdf_salaries
median(m_cdf_salaries)
m_cdf_salaries
median(m_cdf_salaries)
median(f_cdf_salaries)
print("the median salary for women is" median(f_cdf_salaries))
print("the median salary for women is", median(f_cdf_salaries))
print("the median salary for women is", median(f_cdf_salaries))
print("the median salary for women is", median(f_cdf_salaries))
print(c("the median salary for women is", median(f_cdf_salaries)))
print0(c(the median salary for women is , median(f_cdf_salaries)))
paste(c(the median salary for women is , median(f_cdf_salaries)))
paste(the median salary for women is , median(f_cdf_salaries))
paste("the median salary for women is" , median(f_cdf_salaries))
paste("the median salary for women is", "$", median(f_cdf_salaries))
paste0("the median salary for women is", "$", median(f_cdf_salaries))
paste0("the median salary for women is ", "$", median(f_cdf_salaries))
paste0("The median salary for women is ", "$", median(f_cdf_salaries))
paste0("The median salary for men is ", "$", median(m_cdf_salaries))
paste0("The difference at the median is ", "$", median(f_cdf_salaries) - median(m_cdf_salaries))
paste0("The difference at the median is ", "$", median(m_cdf_salaries) - median(f_cdf_salaries))
paste0("The median salary for women is ", "$", max(f_cdf_salaries))
paste0("The median salary for men is ", "$", max(m_cdf_salaries))
paste0("The difference at the median is ", "$", max(m_cdf_salaries) - max(f_cdf_salaries))
paste0("The max salary for women is ", "$", max(f_cdf_salaries))
paste0("The max salary for men is ", "$", max(m_cdf_salaries))
paste0("The difference at the maximum is ", "$", max(m_cdf_salaries) - max(f_cdf_salaries))
# set global options for figures, code, warnings, and messages
knitr::opts_chunk$set(fig.width=6, fig.height=4, fig.path="../figs/",
echo=TRUE, warning=FALSE, message=FALSE)
# load packages for current session
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(knitr)
salaries_path <- "/Users/genevieve/Reyland-MECH476/data/ME_Salaries.csv"
# import and tidy salary data
salaries <- readr::read_csv(file = salaries_path)
names(salaries) <- tolower(names(salaries))
salaries$gender <- as.factor(salaries$gender)
important_data <- salaries %>%
dplyr::filter(salary > 0)
# number of observations with salary as 0
zero_salary <- salaries %>%
dplyr::filter(salary == 0) %>%
tally()
# number of factor levels
levels(salaries$gender)
# univariate eda
# cumulative bar chart for gender and age
g_plot <- ggplot(data = salaries,
mapping = aes(x = age,
y = salary,
fill = gender)) +
geom_bar(stat = "identity",
position = "dodge")
# box plot for age vs salary
box_salary <- ggplot(data = salaries,
mapping = aes(x = salary,
fill = gender,
y = gender)) +
geom_boxplot(outlier.alpha = 0.05) +
theme_bw()
# quartile plot for gender and salary
quartile_salary <- ggplot(data = salaries,
mapping = aes(x = salary,
color = gender)) +
stat_ecdf() +
theme_bw() +
labs(x = "Salary",
y = "Quantile")
# histogram of gender vs age
hist_age <- ggplot(data = salaries) +
geom_histogram(aes(x = age,
fill = gender),
bins = 100,
position = "dodge")
# embed plots into one figure
gridExtra::grid.arrange(g_plot, box_salary, quartile_salary, hist_age,
widths = c(0.4, 1, 0.4),
layout_matrix = rbind(c(NA, 1, NA),
c(NA, 2, NA),
c(NA, 3, NA),
c(NA, 4, NA)))
# histogram of salaries split by gender
hist_salary <- ggplot(data = salaries) +
geom_histogram(aes(x = salary),
bins = 50,
color = "lightgrey") +
labs(x = "Salary",
y = "Number of People",
title = "Histogram of Salaries Based on Age",
subtitle = "Engineering Graduates Salaries Split by Age") +
scale_x_continuous(labels = scales::label_dollar(scale = 0.001,
prefix = '$',
suffix = 'k'))
# faceted by gender
hist_salary + facet_grid(cols = vars(gender),
labeller = label_both)
# histogram of ages split by gender
hist_age2 <- ggplot(data = salaries) +
geom_histogram(aes(x = age),
bins = 50,
color = "lightgrey") +
labs(x = "Age",
y = "Number of People",
title = "Histogram of Number of People per Age",
subtitle = "Engineering Graduates by Age in 2017")
hist_age2 + facet_grid(cols = vars(gender),
labeller = label_both)
# boxplots of salary data by gender
salary_box <- ggplot(data = salaries) +
geom_boxplot(aes(y = salary),
outlier.shape = 1) +
labs(y = "Salary",
title = "Boxplot for Salary Based on Gender",
subtitle = "Plot for Salary of Engineers Based on Gender in 2017") +
scale_y_continuous(labels = scales::label_dollar(scale = 0.001,
prefix = '$',
suffix = 'k')) +
coord_flip()
salary_box + facet_grid(cols = vars(gender),
labeller = label_both)
# boxplots of age data by gender
age_box <- ggplot(data = salaries) +
geom_boxplot(aes(y = age)) +
labs(y = "Age",
title = "Boxplot for Age Based on Gender") +
coord_flip()
age_box + facet_grid(cols = vars(gender),
labeller = label_both)
# scatterplot of salary across age by gender
multivar_scatter <- ggplot(data = salaries,
mapping = aes(x = age,
y = salary,
color = gender)) +
geom_point() +
labs(x = "Age",
y = "Salary",
title = "Salary Based on Age",
subtitle = "Scatterplot of Engineers Salary per Age by Gender") +
theme_bw()
multivar_scatter
# correlation test
corr_test <- cor(salaries$salary, salaries$age)
# plot cdf of salary by gender
salary_ecdf <- ggplot(data = salaries) +
geom_step(aes(x = salary,
color = gender),
stat = "ecdf") +
labs(x = "Salary",
y = "Quantile",
title = "Cumulative Distribution Plot of Salary by Gender",
subtitle = "Plot of Salary by Gender for Engineers") +
scale_x_log10(limits = c(5e4, 5e5)) +
theme_bw()
salary_ecdf
# calculate quantiles of salary by gender
set.seed(1)
f_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::filter(gender == "F") %>%
dplyr::ungroup()
m_quart <- salaries %>%
dplyr::select(salary, gender) %>%
dplyr::group_by(gender) %>%
dplyr::filter(gender == "M") %>%
dplyr::ungroup()
m_cdf_salaries <- quantile(m_quart$salary, probs = seq(0, 1, 0.25))
f_cdf_salaries <- quantile(f_quart$salary, probs = seq(0, 1, 0.25))
m_cdf_salaries
f_cdf_salaries
paste0("The median salary for women is ", "$", median(f_cdf_salaries))
paste0("The median salary for men is ", "$", median(m_cdf_salaries))
paste0("The difference at the median is ", "$", median(m_cdf_salaries) - median(f_cdf_salaries))
paste0("The max salary for women is ", "$", max(f_cdf_salaries))
paste0("The max salary for men is ", "$", max(m_cdf_salaries))
paste0("The difference at the maximum is ", "$", max(m_cdf_salaries) - max(f_cdf_salaries))
?mpg
mpg
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_scatter(aes(x = dips,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_scatter(aes(x = disp,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = disp,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = disp,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
mpg_plot
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = disp,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
# knitr::include_graphics("./mpg-ch7-plot.pdf")
ggplot(data = mpg) +
geom_point(aes(x = disp,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
mpg
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008")
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008") +
theme_bw()
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class)) +
scale_fill_discrete(name = "Car class") +
labs(x = "Enginer displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008") +
theme_minimal()
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class),
alpha = 0.2) +
scale_fill_discrete(name = "Car class") +
labs(x = "Engine displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008") +
theme_minimal()
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class),
alpha = 0.8) +
scale_fill_discrete(name = "Car class") +
labs(x = "Engine displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008") +
theme_minimal()
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class),
alpha = 0.5) +
scale_fill_discrete(name = "Car class") +
labs(x = "Engine displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008") +
theme_minimal()
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class),
alpha = 0.5) +
labs(x = "Engine displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008") +
theme_minimal()
mpg_plot + scale_fill_discrete(name = "Car class")
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class),
alpha = 0.5) +
labs(x = "Engine displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008") +
theme_minimal()
mpg_plot + scale_shape_discrete(name = "Car class")
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class),
alpha = 0.5) +
labs(x = "Engine displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008",
fill = "Car class") +
theme_minimal()
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
# call mpg pdf - you need to recreate it
mpg_plot <- ggplot(data = mpg) +
geom_point(aes(x = displ,
y = hwy,
color = class),
alpha = 0.5) +
labs(x = "Engine displacement (litres)",
y = "Highway miles per gallon",
title = "Mileage by engine displacement",
subtitle = "Date from 1999 to 2008",
color = "Car class") +
theme_minimal()
mpg_plot
# knitr::include_graphics("./mpg-ch7-plot.pdf")
